version: '3.7'

volumes:
  grafana_storage:
  prometheus_data:
  postgres:

networks:
  stack-network:
  
services:
  fus-service:
    image: fus-service
    container_name: fus-service
    build:
      context: ../../DTA/Services
      dockerfile: DTA.JIT.FUS/Dockerfile
    environment:
      - "DAT_JIT_FUS_Logging__LogLevel__Default=Debug"
      - "DAT_JIT_FUS_Logging__LogLevel__OpenTelemetry=Debug"
      - "DAT_JIT_FUS_OpenTelemetrySettings__ExporterEndpoint=http://otel-lgtm:4317"
    networks:
      - stack-network

  srs-service:
    image: srs-service
    container_name: srs-service
    build:
      context: ../../DTA/Services
      dockerfile: DTA.JIT.SRS/Dockerfile
    environment:
      - "DAT_JIT_SRS_Logging__LogLevel__Default=Debug"
      - "DAT_JIT_SRS_Logging__LogLevel__OpenTelemetry=Debug"
      - "DAT_JIT_SRS_OpenTelemetrySettings__ExporterEndpoint=http://otel-lgtm:4317"
    networks:
      - stack-network

  otel-lgtm:
    image: grafana/otel-lgtm
    container_name: otel-stack
    volumes:
      - ./configuration/grafana-provisioning/grafana.ini:/etc/grafana/grafana.ini
      - ./configuration/grafana-provisioning/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SERVER_ROOT_URL=http://localhost/grafana/
    restart: unless-stopped
    networks:
      - stack-network

  database:
    container_name: postgre_db
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    networks:
      stack-network:
    restart: unless-stopped

  proxy:
    image: nginx:alpine
    restart: always
    container_name: proxy
    ports:
      - "80:80"
    volumes:
      - ./configuration/proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./configuration/proxy/www:/usr/share/nginx/html/custom 
    networks:
      stack-network: